/* tslint:disable */
/* eslint-disable */
/**
 * TodoApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthResponseDto
 */
export interface AuthResponseDto {
    /**
     * 
     * @type {string}
     * @memberof AuthResponseDto
     */
    token: string | null;
    /**
     * 
     * @type {Date}
     * @memberof AuthResponseDto
     */
    expiration: Date;
    /**
     * 
     * @type {string}
     * @memberof AuthResponseDto
     */
    userId: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuthResponseDto
     */
    email: string | null;
}

/**
 * Check if a given object implements the AuthResponseDto interface.
 */
export function instanceOfAuthResponseDto(value: object): value is AuthResponseDto {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('expiration' in value) || value['expiration'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function AuthResponseDtoFromJSON(json: any): AuthResponseDto {
    return AuthResponseDtoFromJSONTyped(json, false);
}

export function AuthResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'],
        'expiration': (new Date(json['expiration'])),
        'userId': json['userId'],
        'email': json['email'],
    };
}

export function AuthResponseDtoToJSON(json: any): AuthResponseDto {
    return AuthResponseDtoToJSONTyped(json, false);
}

export function AuthResponseDtoToJSONTyped(value?: AuthResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': value['token'],
        'expiration': ((value['expiration']).toISOString()),
        'userId': value['userId'],
        'email': value['email'],
    };
}

